@model List<ApiMVC.Models.CallHistory>
@{
    ViewBag.Title = "GetHistoryCall";
}

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://kit.fontawesome.com/a36c5d7fce.js" crossorigin="anonymous"></script>
<style>
    .wrap {
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .button {
        min-width: 300px;
        min-height: 60px;
        font-family: 'Nunito', sans-serif;
        font-size: 22px;
        text-transform: uppercase;
        letter-spacing: 1.3px;
        font-weight: 700;
        color: #313133;
        background: #4FD1C5;
        background: linear-gradient(90deg, rgba(129,230,217,1) 0%, rgba(79,209,197,1) 100%);
        border: none;
        border-radius: 1000px;
        box-shadow: 12px 12px 24px rgba(79,209,197,.64);
        transition: all 0.3s ease-in-out 0s;
        cursor: pointer;
        outline: none;
        position: relative;
        padding: 10px;
    }

    button::before {
        content: '';
        border-radius: 1000px;
        min-width: calc(300px + 12px);
        min-height: calc(60px + 12px);
        border: 6px solid #00FFCB;
        box-shadow: 0 0 60px rgba(0,255,203,.64);
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        opacity: 0;
        transition: all .3s ease-in-out 0s;
    }

    .button:hover, .button:focus {
        color: #313133;
        transform: translateY(-6px);
    }

    button:hover::before, button:focus::before {
        opacity: 1;
    }

    button::after {
        content: '';
        width: 30px;
        height: 30px;
        border-radius: 100%;
        border: 6px solid #00FFCB;
        position: absolute;
        z-index: -1;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        animation: ring 1.5s infinite;
    }

    button:hover::after, button:focus::after {
        animation: none;
        display: none;
    }

    keyframes ring {
        0%

    {
        width: 30px;
        height: 30px;
        opacity: 1;
    }

    100% {
        width: 300px;
        height: 300px;
        opacity: 0;
    }
    }
</style>
<script>
    function saveDatabase() {
        var xhr = new XMLHttpRequest();
        // Thiết lập hàm xử lý sự kiện khi nhận được kết quả từ server
        xhr.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                Swal.fire({
                    position: 'center',
                    icon: 'success',
                    title: 'Dữ liệu đã được lưu thành công',
                    showConfirmButton: false,
                    timer: 1300
                })
            }
        };
        // Gửi request đến server
        xhr.open('GET', '/CallHistory/Index', true);
        xhr.send();
    }
</script>


<table class="table" style="font-size:13px">
    <thead >
        <tr>
            <th>Ngày gọi</th>
            <th>Số nhận</th>
            <th>Đầu số</th>
            <th>Trạng thái</th>
            <th class="text-center">Thời lượng</th>
            <th>Số gọi</th>
            <th class="text-center">Loại cuộc gọi</th>
            <th class="text-center">File ghi âm</th>
            <th class="text-center">Tải xuống</th>
            <th >Cập nhật</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr style="font-weight:600">
                <td>@string.Format("{0:dd/MM/yyyy HH:mm:ss}", item.CallDate)</td>
                <td style="color:#F8444F">@item.Dst</td>
                <td>@item.Src</td>
                @if (item.Status == "BUSY")
                {
                    <td>
                        <div class="text-center bg-warning text-white" style="border-radius: 15px; padding: 10px; font-weight: 600">
                            Máy bận
                        </div>
                    </td>
                }
                else if (item.Status == "NO ANSWER")
                {
                    <td>
                        <div class="text-center text-white" style="border-radius: 15px; padding: 10px; font-weight: 600;background-color:#556EE6">
                            Không trả lời
                        </div>
                    </td>
                }
                else if (item.Status == "MISSED")
                {
                    <td>
                        <div class="text-center bg-danger text-white" style="border-radius:15px;padding:10px;font-weight:600">
                            Gọi nhỡ
                        </div>
                    </td>
                }
                else
                {
                    <td>
                        <div class="text-center bg-success text-white" style="border-radius: 15px; padding: 10px;font-weight:600">
                            Trả lời
                        </div>
                    </td>
                }
                <td class="text-center">@DateTime.MinValue.AddSeconds(item.Duration).ToString("HH:mm:ss")</td>
                <td>@(item.Did.StartsWith("84") ? "0" + item.Did.Substring(2) : item.Did)</td>
                @if (item.Type == "outbound")
                {
                    <td>
                        <div class="text-center bg-danger text-white" style="border-radius: 15px; padding: 10px">
                            Gọi ra
                        </div>
                    </td>
                }
                else if (item.Type == "inbound")
                {
                    <td>
                        <div class="text-center bg-success text-white" style="border-radius: 15px; padding: 10px">
                            Gọi vào
                        </div>
                    </td>
                }
                else
                {
                    <td>
                        <div class="text-center bg-info text-white" style="border-radius: 15px; padding: 10px">
                            Gọi nội bộ
                        </div>
                    </td>
                }
                <td style="text-align:center">
                    @if (!string.IsNullOrEmpty(item.Play))
                    {
                        <a style="display:inline-block;margin:auto" href="@item.Play" type="button" class="btn btn-outline-warning">
                            <i class="fa-solid fa-play"></i>
                        </a>
                    }
                    else
                    {
                        <span></span>
                    }
                </td>
                <td style="text-align:center">
                    @if (!string.IsNullOrEmpty(item.Download))
                    {

                        <a style="display:inline-block;margin:auto" class="btn btn-success" href="@Url.Action("DownloadForUrl","CallHistory", new { downloadUrl = item.Download })">
                            <i class="fa-solid fa-download"></i>
                        </a>
                    }
                    else
                    {
                        <span></span>
                    }
                </td>
                <td style="text-align:center">
                    @if (!string.IsNullOrEmpty(item.Download))
                    {
                        <a style="display:inline-block;margin:auto" class="btn btn-primary" type="button" href="@Url.Action("DownloadFile","CallHistory", new { downloadUrl = item.Download })">
                            <i class="fa-sharp fa-solid fa-download"></i>
                        </a>
                    }
                    else
                    {
                        <span></span>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="wrap">
    <button class="button" onclick="saveDatabase()">Save to database</button>
</div>